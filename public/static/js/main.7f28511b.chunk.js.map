{"version":3,"sources":["components/HomePage.js","components/NotFound.js","api.js","components/TopArtists.js","components/UserRelatedConcerts.js","components/TopFrenchPage.js","components/AttendingEvent.js","components/nav.js","components/connected.js","components/GenericNextConcerts.js","components/GenericHomepage.js","components/ConcertInfo.js","components/Test.js","components/SpotiPlayer.js","components/playListPlayer.js","components/user-dashboard.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","src","alt","href","concat","process","NavLink","to","Component","NotFound","backendApi","axios","create","baseURL","withCredentials","errorHandler","err","response","data","console","log","alert","TopArtists","topArtists","_this2","get","catch","then","setState","map","oneArtist","key","resultsPage","results","event","performance","displayName","oneEvent","type","Link","concert","id","venue","UserRelatedConcerts","artistConcerts","start","date","slice","TopFrenchPage","topFrenchArtists","AttendingEvent","currentUser","Nav","Connected","topArtistName","concertArray","tokenObject","_this$props","match","history","params","loginToken","post","replace","loggedIn","_this3","_this4","styles","fadeInDown","animation","animationName","Radium","keyframes","style_root","nav","style","image","fullName","onClick","logoutClick","src_components_TopArtists","assign","components_AttendingEvent","src_components_UserRelatedConcerts","src_components_TopFrenchPage","NextConcertsParis","concertsParis","oneConcert","GenericInfosHome","franceTopArtists","artist","el","values","mbid","oneImg","name","listeners","components_GenericNextConcerts","ConcertInfo","songkick","lastfm","isSubmitSuccessful","eventId","concertId","currentUserConcert","userConcertArray","forEach","oneId","push","some","element","lastfmData","songkickData","preventDefault","addConcertToUser","_this$state","checkingIfAttending","stats","similar","oneSimilarArtist","url","tags","tag","oneGenre","bio","summary","street","location","city","zip","handleSubmit","TestPage","spotify","SpotiPlayer","relatedArtists","artists","spotArray","array","randomNumber","Math","floor","random","secondNumber","sliceToArray","artistUrl","followUrl","title","width","height","frameBorder","allowtransparency","allow","scrolling","frameborder","PlayListPlayer","playListArray","spotiPlaylists","items","oneItem","onePlaylist","Dashboard","delete","onConcertDelete","components_SpotiPlayer","playListPlayer","App","userData","localStorage","getItem","JSON","parse","userInfo","setItem","stringify","removeItem","Switch","Route","exact","path","component","render","components_connected","user","updateUser","src_components_ConcertInfo","user_dashboard","Boolean","window","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f28511b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./HomePage.css\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <section className=\"HomePage\">\n        <div className=\"home-card\">\n          <img className=\"logo\" src=\"images/logo.png\" alt=\"logo\" />\n          <h1>Live Finder.</h1>\n          <h2>Enjoy the full experience with Spotify</h2>\n\n          <hr className=\"small-hr\" />\n          <p>\n            To enjoy the full experience, we recommand you to sync your acount\n            with spotify. You also can sync your spotify account to facebook to\n            live the social experience and see who is up for a live!\n          </p>\n          <div>\n            <a href={`${process.env.REACT_APP_BACKEND_URL}/auth/spotify`}>\n              Connect with Spotify\n            </a>\n            <a href=\"#0\">Connect with Deezer</a>\n            <a href=\"#0\">Connect with Apple Music </a>\n          </div>\n          <hr />\n        </div>\n        <div className=\"home-card\">\n          <h1>Live Me Alone.</h1>\n          <h2>Don't want the full experience ?</h2>\n          <hr className=\"small-hr\" />\n          <p>\n            Don't worrie, you can still enjoy the app and discover new bands and\n            lives. And if you want to sync later on, you still can come back to\n            this screen.\n          </p>\n          <NavLink className=\"big-btn\" to=\"/generic\">\n            Don't connect\n          </NavLink>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from \"react\";\n\nclass NotFound extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <section>\n        <p>Failed to connect</p>\n      </section>\n    );\n  }\n}\n\nexport default NotFound;\n","import axios from \"axios\";\n\nconst backendApi = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true\n});\n\nfunction errorHandler(err) {\n  if (err.response && err.response.data) {\n    console.log(\"API ERROR\", err.response.data);\n  } else {\n    console.log(\"React Code Error\", err);\n  }\n  alert(\"ERROR ! SOMETHING WENT WRONG !\");\n  throw err;\n}\n\nexport function postTokenLogin(tokenObject) {\n  return backendApi.post(\"/auth/token-login\", tokenObject).catch(errorHandler);\n}\n\nexport function getLogOut() {\n  return backendApi.get(\"/logout\").catch(errorHandler);\n}\n\nexport function getTopArtist() {\n  return backendApi.get(\"/userInfo\").catch(errorHandler);\n}\n\nexport function getTopFrench() {\n  return backendApi.get(\"/top-french\").catch(errorHandler);\n}\n\nexport function getTopArtistsList() {\n  return backendApi.get(\"/top-artists-list\").catch(errorHandler);\n}\n\nexport function getRelatedConcerts() {\n  return backendApi.get(\"/similar-artist\").catch(errorHandler);\n}\n\nexport function concertInfo(concertId) {\n  return backendApi.get(`/concert-info/${concertId}`).catch(errorHandler);\n}\n\nexport function addConcert(concertId) {\n  return backendApi.post(`/concert-info/${concertId}`).catch(errorHandler);\n}\n\nexport function genericInfos() {\n  return backendApi.get(\"/generic\").catch(errorHandler);\n}\n\nexport function nextConcertsParis() {\n  return backendApi.get(\"/concerts-paris\").catch(errorHandler);\n}\n\nexport function getArtistInfos() {\n  return backendApi.get(`/artist`).catch(errorHandler);\n}\nexport function getTest() {\n  return backendApi.get(\"/test\").catch(errorHandler);\n}\nexport function spotiPlayer() {\n  return backendApi.get(\"/spotiPlayer\").catch(errorHandler);\n}\n\nexport function userDashboard() {\n  return backendApi.get(\"/dashboard-info\").catch(errorHandler);\n}\n\nexport function deleteConcert(concertId) {\n  return backendApi.delete(`/delete-concert/${concertId}`).catch(errorHandler);\n}\n\nexport function getTopPlaylist() {\n  return backendApi.get(\"/get-top-playlist\").catch(errorHandler);\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getTopArtist, concertInfo } from \"../api.js\";\n\nimport \"./TopArtists.css\";\n\nfunction getConcertAddress(concert) {\n  return `/concert-info/${concert.id}`;\n}\nclass TopArtists extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topArtists: []\n    };\n  }\n  componentDidMount() {\n    getTopArtist().then(response => {\n      this.setState({ topArtists: response.data });\n    });\n  }\n\n  render() {\n    const { topArtists } = this.state;\n    return (\n      <section className=\"padding-top off-grid-section desktop-cards-section\">\n        <div className=\"desktop-card-heading\">\n          <h3>Your next recommended concerts.</h3>\n\n          <p>\n            Check out the next concerts from the artists you most listened to.\n          </p>\n          <hr className=\"small-hr\" />\n        </div>\n\n        <div>\n          {topArtists.map(oneArtist => {\n            return (\n              <div\n                key={\n                  oneArtist.resultsPage.results.event[0].performance[0]\n                    .displayName\n                }\n              >\n                <h3>\n                  #\n                  {\n                    oneArtist.resultsPage.results.event[0].performance[0]\n                      .displayName\n                  }\n                </h3>\n                <div className=\"inline-carousel desktop-caroussel\">\n                  {oneArtist.resultsPage.results.event.map(oneEvent => {\n                    return (\n                      <div key={oneEvent.displayName}>\n                        <div className=\"inline-card\">\n                          <span className=\"outline-text\">{oneEvent.type}</span>\n                          <span className=\"card-btn\">{/* <Link to />+ */}</span>\n\n                          <div className=\"card-text\">\n                            <Link to={getConcertAddress(oneEvent)}>\n                              <h4>{oneEvent.venue.displayName}</h4>\n                              <hr />\n                              <h3>{oneEvent.displayName}</h3>\n                            </Link>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        {/* <small> see more</small> */}\n      </section>\n    );\n  }\n}\nexport default TopArtists;\n","import React, { Component } from \"react\";\nimport { getRelatedConcerts } from \"../api.js\";\n\nimport \"./UserRelatedConcerts.css\";\nimport { Link } from \"react-router-dom\";\nfunction getConcertAddress(concert) {\n  return `/concert-info/${concert.id}`;\n}\n\nclass UserRelatedConcerts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artistConcerts: []\n    };\n  }\n\n  componentDidMount() {\n    getRelatedConcerts().then(response => {\n      this.setState({\n        artistConcerts: response.data\n      });\n    });\n  }\n\n  render() {\n    const { artistConcerts } = this.state;\n    return (\n      <section className=\"\">\n        <h3>You may also like.</h3>\n\n        <p>Discover some concerts we think you might enjoy</p>\n        <hr className=\"small-hr\" />\n\n        <div>\n          {artistConcerts.map(oneArtist => {\n            return (\n              <div\n                className=\"inline-carousel\"\n                key={oneArtist.resultsPage.results.event[0].displayName}\n              >\n                <div className=\"inline-carousel\">\n                  {oneArtist.resultsPage.results.event.map(oneEvent => {\n                    return (\n                      <div key={oneEvent.id} className=\"inline-thin-card\">\n                        <div className=\"card-thin-img\">\n                          <p className=\"date-day\">\n                            {oneEvent.start.date.slice(5, 7)}\n                          </p>\n                          <p className=\"date-month\">\n                            {oneEvent.start.date.slice(8)}\n                          </p>\n\n                          <p className=\"date-year\">\n                            {oneEvent.start.date.slice(0, 4)}\n                          </p>\n                        </div>\n\n                        <div className=\"text-thin-card\">\n                          <h4>{oneEvent.venue.displayName}</h4>\n                          {/* <hr className=\"\" /> */}\n                          <Link to={getConcertAddress(oneEvent)}>\n                            <h3>{oneEvent.performance[0].displayName}</h3>\n                          </Link>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n                {/* <p>{oneArtist.popularity}</p>\n                <img src={oneArtist.images[1].url} alt=\"img\" /> */}\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default UserRelatedConcerts;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./TopFrenchPage.css\";\nimport { getTopFrench } from \"../api.js\";\n\nfunction getConcertAddress(concert) {\n  return `/concert-info/${concert.id}`;\n}\n\nclass TopFrenchPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topFrenchArtists: []\n    };\n  }\n\n  componentDidMount() {\n    getTopFrench().then(response => {\n      this.setState({\n        topFrenchArtists: response.data\n      });\n    });\n  }\n  render() {\n    const { topFrenchArtists } = this.state;\n    return (\n      <section className=\"desktop-cards-section\">\n        <div className=\"desktop-card-heading flex-item1\">\n          <h3>Trending lives around you.</h3>\n\n          <p>\n            Discover concerts from bands that are trending around you (updated\n            every Fridays).\n          </p>\n          <hr className=\"small-hr\" />\n        </div>\n        <div className=\"flex-item2\">\n          {topFrenchArtists.map(oneArtist => {\n            return (\n              <div key={oneArtist.resultsPage.results.event[0].id}>\n                <hr />\n                <h3>\n                  {\n                    oneArtist.resultsPage.results.event[0].performance[0]\n                      .displayName\n                  }\n                </h3>\n                <div className=\"inline-carousel desktop-caroussel\">\n                  {oneArtist.resultsPage.results.event.map(oneEvent => {\n                    return (\n                      <div key={oneEvent.displayName}>\n                        <div className=\"inline-card-v2\">\n                          <span className=\"outline-text\">{oneEvent.type}</span>\n                          <span className=\"card-btn\">{/* <Link to />+ */}</span>\n\n                          <div className=\"card-text\">\n                            <div className=\"inline-card-v2-text\">\n                              <Link to={getConcertAddress(oneEvent)}>\n                                <h4>{oneEvent.venue.displayName}</h4>\n                                <hr />\n                                <h3>{oneEvent.displayName}</h3>\n                              </Link>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default TopFrenchPage;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nfunction getConcertAddress(concert) {\n  return `/concert-info/${concert.id}`;\n}\nclass AttendingEvent extends Component {\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <section className=\"AttendingEvent\">\n        <div className=\"AttendingEvent-text\">\n          <h3>Your Attending Concert</h3>\n\n          <p>Here are your next live events planned.</p>\n          <hr className=\"small-hr\" />\n          <div className=\"flex-small-cards\">\n            {currentUser.concert.map(oneEvent => {\n              return (\n                <div key={oneEvent.id} className=\"small-card\">\n                  <div className=\"small-card-text\">\n                    <div className=\"small-card-date\">\n                      <p>{oneEvent.start.date}</p>\n                      <p>{oneEvent.venue.displayName}</p>\n                    </div>\n                    <div>\n                      {/* <hr className=\"\" /> */}\n                      <Link to={getConcertAddress(oneEvent)}>\n                        <h3>{oneEvent.performance[0].displayName}</h3>\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default AttendingEvent;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Nav extends Component {\n  state = {};\n  render() {\n    return (\n      <nav>\n        <div>\n          <NavLink to=\"/connected\">\n            <img\n              src=\"https://image.flaticon.com/icons/svg/1378/1378756.svg\"\n              alt=\"lol\"\n            />\n          </NavLink>\n        </div>\n        <div>\n          <NavLink to=\"/user-dashboard\">\n            <img\n              src=\"https://image.flaticon.com/icons/svg/747/747376.svg\"\n              alt=\"lol\"\n            />\n          </NavLink>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport TopArtistsLive from \"./TopArtists\";\nimport { getLogOut, postTokenLogin } from \"../api.js\";\n\nimport { fadeInDown } from \"react-animations\";\nimport Radium, { StyleRoot } from \"radium\";\n\nimport \"./connected.css\";\n\nimport UserRelatedConcerts from \"./UserRelatedConcerts\";\nimport TopFrenchPage from \"./TopFrenchPage\";\nimport AttendingEvent from \"./AttendingEvent\";\nimport Nav from \"./nav\";\n\nclass Connected extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topArtists: [],\n      topArtistName: [],\n      concertArray: [],\n      currentUser: { concert: [] },\n    };\n  }\n\n  componentDidMount() {\n    const { match, history } = this.props;\n\n    if (match.params.loginToken) {\n      postTokenLogin(match.params).then((response) => {\n        console.log(\"Logged-In\");\n        history.replace(\"/connected\");\n        this.props.loggedIn(response.data);\n      });\n    }\n  }\n\n  logoutClick() {\n    getLogOut().then((response) => {\n      console.log(\"LOGGED OUT\");\n\n      this.props.loggedIn(null);\n    });\n  }\n\n  render() {\n    const styles = {\n      fadeInDown: {\n        animation: \"x 1.5s\",\n        animationName: Radium.keyframes(fadeInDown, \"fadeInDown\"),\n      },\n    };\n\n    const { currentUser } = this.props;\n\n    console.log(currentUser);\n\n    if (!this.props.currentUser) {\n      return <p>Loading...</p>;\n    }\n    return (\n      <section className=\"Connected\">\n        <StyleRoot>\n          <header className=\"Header\">\n            <Nav style={styles.fadeInDown} />\n            <div className=\"header-card\" style={styles.fadeInDown}>\n              <div className=\"header-text\">\n                <div className=\"img-flex\">\n                  <img\n                    className=\"profilPic\"\n                    src={this.props.currentUser.image}\n                    alt=\"\"\n                  />\n                </div>\n                <h1>Hi {this.props.currentUser.fullName}</h1>\n                <hr />\n                <h2>Kean for new concerts?</h2>\n                <p>\n                  Check out the next live bands arround, any trending concerts\n                  arround any more.\n                </p>\n                <small>\n                  <NavLink to=\"/\">\n                    <button\n                      className=\"outline-text-black\"\n                      onClick={() => this.logoutClick()}\n                    >\n                      Log Out\n                    </button>\n                  </NavLink>\n                </small>\n              </div>\n            </div>\n          </header>\n        </StyleRoot>\n\n        <TopArtistsLive {...this.props} style={styles.fadeInDown} />\n        <AttendingEvent {...this.props} style={styles.fadeInDown} />\n        <UserRelatedConcerts {...this.props} style={styles.fadeInDown} />\n        <TopFrenchPage {...this.props} style={styles.fadeInDown} />\n      </section>\n    );\n  }\n}\n\nexport default Connected;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./GenericNextConcerts.css\";\nimport { nextConcertsParis } from \"../api\";\n\nfunction getConcertAddress(concert) {\n  return `/concert-info/${concert.id}`;\n}\n\nclass NextConcertsParis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      concertsParis: []\n    };\n  }\n\n  componentDidMount() {\n    nextConcertsParis().then(response => {\n      this.setState({\n        concertsParis: response.data\n      });\n    });\n  }\n\n  render() {\n    const { concertsParis } = this.state;\n    return (\n      <section className=\"NextConcertsParis\">\n        <h3>Next Concerts in Paris</h3>\n\n        <hr className=\"small-hr\" />\n        <p>See the upcomming event in Paris</p>\n        <div className=\"column-card-flex\">\n          {concertsParis.map(oneConcert => {\n            return (\n              <div className=\"column-card\">\n                <Link to={getConcertAddress(oneConcert)}>\n                  <p>\n                    <span>{oneConcert.type}</span>\n                    {/* <hr className=\"small-hr\" /> */}\n                  </p>\n                  <h3>{oneConcert.displayName}</h3>\n                  <p>\n                    <span>{oneConcert.venue.displayName}</span>\n                  </p>\n                </Link>\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default NextConcertsParis;\n","import React, { Component } from \"react\";\nimport { genericInfos } from \"../api.js\";\nimport NextConcertsParis from \"./GenericNextConcerts\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./GenericHomepage.css\";\n\nclass GenericInfosHome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      franceTopArtists: []\n    };\n  }\n\n  componentDidMount() {\n    genericInfos().then(response => {\n      this.setState({\n        franceTopArtists: response.data.artist\n      });\n    });\n  }\n\n  oneImg(el) {\n    return Object.values(el);\n  }\n\n  render() {\n    const { franceTopArtists } = this.state;\n    return (\n      <section className=\"GenericInfosHome\">\n        <header>\n          <nav>\n            <Link to=\"/\">\n              <h1 className=\"btn-home\">\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/130/130882.svg\"\n                  alt=\"\"\n                />\n              </h1>\n            </Link>\n          </nav>\n          <div>\n            <span className=\"outline-text\">GENERIC</span>\n            <hr className=\"small-hr\" />\n            <h1>\n              Hello.\n              <br /> You are not connected?\n            </h1>\n            <h2>Don't panic, we got your back!</h2>\n            <p>\n              You are currently on the unsynchronised page. You will discover\n              artits and lives that are famous around you :)\n            </p>\n          </div>\n        </header>\n        <h3>Top Artists in France</h3>\n        <hr className=\"small-hr\" />\n        <p>Discover what french people like to listen right now</p>\n        {franceTopArtists.map(oneArtist => {\n          return (\n            <div className=\"column-card-with-image\" key={oneArtist.mbid}>\n              <img src={this.oneImg(oneArtist.image[4])} alt=\"artist picto\" />\n              <div className=\"column-card-with-image-text\">\n                <h3>{oneArtist.name}</h3>\n\n                <p>{oneArtist.listeners} Listeners</p>\n              </div>\n            </div>\n          );\n        })}\n        <NextConcertsParis />\n      </section>\n    );\n  }\n}\n\nexport default GenericInfosHome;\n","import React, { Component } from \"react\";\nimport { concertInfo } from \"../api.js\";\nimport { addConcert } from \"../api.js\";\nimport Nav from \"./nav\";\n\nimport \"./ConcertInfo.css\";\n\nclass ConcertInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      songkick: [],\n      lastfm: [],\n      isSubmitSuccessful: false\n    };\n  }\n\n  checkingIfAttending(currentUser) {\n    const eventId = this.props.match.params.concertId;\n    const currentUserConcert = this.props.currentUser.concert;\n    const userConcertArray = [];\n    currentUserConcert.forEach(oneId => {\n      userConcertArray.push(oneId.id);\n    });\n    const compare = function(element) {\n      return element - eventId === 0;\n    };\n    return userConcertArray.some(compare);\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n\n    concertInfo(params.concertId).then(response => {\n      const lastfmData = this.state.lastfm;\n      const songkickData = this.state.songkick;\n      songkickData.push(response.data[0]);\n      lastfmData.push(response.data[1]);\n      this.setState({\n        songkick: songkickData,\n        lastfm: lastfmData\n      });\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { params } = this.props.match;\n    addConcert(params.concertId).then(response => {\n      this.props.addConcertToUser(response.data);\n      this.setState({ isSubmitSuccessful: true });\n    });\n  }\n\n  oneImg(el) {\n    return Object.values(el);\n  }\n\n  render() {\n    const { isSubmitSuccessful, lastfm, songkick } = this.state;\n    const { currentUser } = this.props;\n    return this.checkingIfAttending(currentUser) ? (\n      <section className=\"ConcertInfo\">\n        {lastfm.map(oneArtist => {\n          return (\n            <div key={oneArtist.name}>\n              <div>\n                <Nav />\n              </div>\n              <img\n                className=\"bk-img\"\n                src={this.oneImg(oneArtist.image[4])}\n                alt=\"artist picto\"\n              />\n              <div>\n                <div className=\"artist-header\">\n                  <div className=\"artist-card\">\n                    <img\n                      className=\"\"\n                      src={this.oneImg(oneArtist.image[4])}\n                      alt=\"artist picto\"\n                    />\n                  </div>\n                  <h1>{oneArtist.name}</h1>\n                  <h4>Total listeners: {oneArtist.stats.listeners}</h4>\n                </div>\n                <hr className=\"small-hr\" />\n                <h3>Similar Artists.</h3>\n                <div className=\"inline-small-carousel\">\n                  {oneArtist.similar.artist.map(oneSimilarArtist => {\n                    return (\n                      <div\n                        className=\"inline-small-card\"\n                        key={oneSimilarArtist.url}\n                      >\n                        <h4>{oneSimilarArtist.name}</h4>\n                        <img\n                          src={this.oneImg(oneSimilarArtist.image[2])}\n                          alt=\"artist picto\"\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n                <hr className=\"small-hr\" />\n                <h3>Genre.</h3>\n                <div className=\"genre-sec\">\n                  {oneArtist.tags.tag.map(oneGenre => {\n                    return (\n                      <div key={oneGenre.url}>\n                        <h5>{oneGenre.name}</h5>\n                      </div>\n                    );\n                  })}\n                </div>\n                <div className=\"summary\">\n                  <hr className=\"small-hr\" />\n                  <h3>Bio.</h3>\n                  <p>{oneArtist.bio.summary}</p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n        <div className=\"concert-card\">\n          {songkick.map(oneEvent => {\n            return (\n              <div>\n                <p>\n                  <span className=\"concert-date\">{oneEvent.start.date}</span>\n                </p>\n                <p>\n                  <span className=\"concert-place\">\n                    {oneEvent.venue.displayName}\n                  </span>\n                </p>\n                <h1>{oneEvent.displayName}</h1>\n                <hr className=\"small-hr\" />\n                <p>{oneEvent.type}</p>\n                <p>\n                  {oneEvent.venue.street}, {oneEvent.location.city},{\" \"}\n                  {oneEvent.venue.zip}\n                </p>\n              </div>\n            );\n          })}\n          {/* a changer selon vos desirs mes seigneurs... */}\n          <h2>Great! You are already attending this concert .</h2>\n        </div>\n      </section>\n    ) : (\n      <section className=\"ConcertInfo\">\n        {lastfm.map(oneArtist => {\n          return (\n            <div key={oneArtist.mbid}>\n              <div>\n                <Nav />\n              </div>\n              <img\n                className=\"bk-img\"\n                src={this.oneImg(oneArtist.image[4])}\n                alt=\"artist picto\"\n              />\n              <div>\n                <div className=\"artist-header\">\n                  <div className=\"artist-card\">\n                    <img\n                      className=\"\"\n                      src={this.oneImg(oneArtist.image[4])}\n                      alt=\"artist picto\"\n                    />\n                  </div>\n                  <h1>{oneArtist.name}</h1>\n\n                  <h3>Total listeners: {oneArtist.stats.listeners}</h3>\n                </div>\n                <hr className=\"small-hr\" />\n                <h3>Similar Artists.</h3>\n                <div className=\"inline-small-carousel\">\n                  {oneArtist.similar.artist.map(oneSimilarArtist => {\n                    return (\n                      <div\n                        className=\"inline-small-card\"\n                        key={oneSimilarArtist.url}\n                      >\n                        <h4>{oneSimilarArtist.name}</h4>\n                        <img\n                          src={this.oneImg(oneSimilarArtist.image[2])}\n                          alt=\"artist picto\"\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n                <hr className=\"small-hr\" />\n                <h3>Genre.</h3>\n                <div className=\"genre-sec\">\n                  {oneArtist.tags.tag.map(oneGenre => {\n                    return (\n                      <div key={oneGenre.url}>\n                        <h5>{oneGenre.name}</h5>\n                      </div>\n                    );\n                  })}\n                </div>\n                <div className=\"summary\">\n                  <hr className=\"small-hr\" />\n                  <h3>Bio.</h3>\n                  <p>{oneArtist.bio.summary}</p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n        <div className=\"concert-card\">\n          {songkick.map(oneEvent => {\n            return (\n              <div key={oneEvent.id}>\n                <p>\n                  <span className=\"concert-date\">{oneEvent.start.date}</span>\n                </p>\n                <h1>{oneEvent.displayName}</h1>\n                <hr className=\"small-hr\" />\n                <p>{oneEvent.type}</p>\n                <p>{oneEvent.venue.displayName}</p>\n                <p>\n                  {oneEvent.venue.street},{oneEvent.location.city},{\" \"}\n                  {oneEvent.venue.zip}\n                </p>\n              </div>\n            );\n          })}\n\n          <button\n            className=\"btn from-top\"\n            onClick={event => this.handleSubmit(event)}\n          >\n            <h3>ATTENDING</h3>\n          </button>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ConcertInfo;\n","import React, { Component } from \"react\";\nimport { getTest } from \"../api\";\n\nclass TestPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lastfm: [],\n      songkick: [],\n      spotify: []\n    };\n  }\n\n  componentDidMount() {\n    getTest().then(response => {\n      const lastfmData = this.state.lastfm;\n      const songkickData = this.state.songkick;\n      lastfmData.push(response.data);\n      this.setState({\n        songkick: songkickData,\n        lastfm: lastfmData\n      });\n    });\n  }\n\n  oneImg(el) {\n    // console.log(el);\n\n    return Object.values(el);\n  }\n\n  render() {\n    const { lastfm, songkick } = this.state;\n    console.log(\"Lastfm DATAq\", lastfm);\n    // const { songkick, lastfm } = this.state;\n\n    // console.log(songkick, \"++++++++++\", lastfm);\n    return (\n      <section>\n        <h1>TEST</h1>\n        {/* {lastfm.map(oneArtist => {\n          return (\n            <div>\n              <h2>{oneArtist.name}</h2>\n              <p>Total Listeners: {oneArtist.stats.listeners}</p>\n              <img src={this.oneImg(oneArtist.image[4])} alt=\"artist picto\" />\n              <p>{oneArtist.bio.content}</p>\n            </div>\n          );\n        })}\n        {songkick.map(oneData => {\n          return (\n            <div>\n              <div>\n                {oneData.event.map(oneEvent => {\n                  return <h2>{oneEvent.displayName}</h2>;\n                })}\n              </div>\n            </div>\n          );\n        })} */}\n        {/* <img src={this.oneImg(lastfm.image[4])} alt=\"artist picto\" />\n         <p>{lastfm.bio.content}</p>  */}\n      </section>\n    );\n  }\n}\n\nexport default TestPage;\n","import React, { Component } from \"react\";\nimport \"./spotiPlayer.css\";\nimport { spotiPlayer } from \"../api.js\";\n\nfunction sliceToArray(array) {\n  const randomNumber = Math.floor(Math.random() * 14) + 1;\n  const secondNumber = randomNumber + 5;\n  return array.slice(randomNumber, secondNumber);\n}\n\nclass SpotiPlayer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      relatedArtists: []\n    };\n  }\n\n  componentDidMount() {\n    spotiPlayer().then(response => {\n      this.setState({ relatedArtists: response.data.artists });\n    });\n  }\n\n  render() {\n    const { relatedArtists } = this.state;\n    const spotArray = sliceToArray(relatedArtists);\n    return (\n      <section className=\"spotiPlayer\">\n        <h3>Discover some Artists with us</h3>\n        <p>Check the Random Players to discover or remember new artists</p>\n        <hr className=\"small-hr\" />\n        <ul>\n          {spotArray.map(oneArtist => {\n            const artistUrl = `https://open.spotify.com/embed/artist/${\n              oneArtist.id\n            }`;\n            const followUrl = `https://open.spotify.com/follow/1/?uri=spotify:artist:${\n              oneArtist.id\n            }&size=basic&theme=light`;\n            return (\n              <div key={oneArtist.id}>\n                <h3>{oneArtist.name}</h3>\n                <iframe\n                  title={oneArtist.name}\n                  src={artistUrl}\n                  width=\"300\"\n                  height=\"80\"\n                  frameBorder=\"10\"\n                  allowtransparency=\"true\"\n                  allow=\"encrypted-media\"\n                />\n                <div>\n                  <iframe\n                    title={oneArtist.name}\n                    src={followUrl}\n                    width=\"300\"\n                    height=\"56\"\n                    scrolling=\"no\"\n                    frameborder=\"0\"\n                    allowtransparency=\"true\"\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default SpotiPlayer;\n","import React, { Component } from \"react\";\nimport { getTopPlaylist } from \"../api.js\";\n\nclass PlayListPlayer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playListArray: []\n    };\n  }\n\n  componentDidMount() {\n    getTopPlaylist().then(response => {\n      const spotiPlaylists = this.state.playListArray;\n      const tempArray = [];\n      response.data.items.forEach(oneItem => {\n        spotiPlaylists.push(oneItem);\n      });\n      this.setState({ playListArray: spotiPlaylists });\n    });\n  }\n\n  render() {\n    const { playListArray } = this.state;\n    return (\n      <section>\n        <h3>Your favourite Playlists</h3>\n        <p>See the playlist you have created here</p>\n        <hr className=\"small-hr\" />\n        <ul>\n          {playListArray.map(onePlaylist => {\n            const artistUrl = `https://open.spotify.com/embed/user/spotify/playlist/${\n              onePlaylist.id\n            }`;\n            return (\n              <div key={onePlaylist.id}>\n                <h3>{onePlaylist.name}</h3>\n                <iframe\n                  title={onePlaylist.name}\n                  src={artistUrl}\n                  width=\"300\"\n                  height=\"380\"\n                  frameBorder=\"0\"\n                  allowtransparency=\"true\"\n                  allow=\"encrypted-media\"\n                />\n              </div>\n            );\n          })}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default PlayListPlayer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteConcert } from \"../api.js\";\nimport SpotiPlayer from \"./SpotiPlayer.js\";\nimport Nav from \"./nav.js\";\nimport PlayListPlayer from \"./playListPlayer.js\";\nfunction getConcertAddress(concert) {\n  return `/concert-info/${concert.id}`;\n}\n\nclass Dashboard extends Component {\n  handleSubmit(concert) {\n    deleteConcert(concert.id).then(response => {\n      this.props.onConcertDelete(response.data);\n    });\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <section>\n        <header className=\"Header\">\n          <Nav />\n          <div className=\"header-card\">\n            <div className=\"header-text\">\n              <div className=\"img-flex\">\n                <img className=\"profilPic\" src={currentUser.image} alt=\"\" />\n              </div>\n              <h1>dashboard</h1>\n              <h2>{currentUser.fullName}</h2>\n              <p>\n                We display for you some of the informations regarding your\n                account\n              </p>\n              <hr />\n            </div>\n          </div>\n        </header>\n        <div className=\"padding-top desktop-cards-section\">\n          <div>\n            <h3>Your next concerts.</h3>\n\n            <p>Here are some of the concert you are attending:</p>\n            <hr className=\"small-hr\" />\n            {currentUser.concert.map(oneEvent => {\n              return (\n                <div className=\"inline-thin-card\">\n                  <div className=\"card-thin-img\">\n                    <p className=\"date-day\">\n                      {oneEvent.start.date.slice(5, 7)}\n                    </p>\n                    <p className=\"date-month\">{oneEvent.start.date.slice(8)}</p>\n\n                    <p className=\"date-year\">\n                      {oneEvent.start.date.slice(0, 4)}\n                    </p>\n                  </div>\n\n                  <div className=\"text-thin-card\">\n                    <h4>{oneEvent.venue.displayName}</h4>\n                    {/* <hr className=\"\" /> */}\n                    <Link to={getConcertAddress(oneEvent)}>\n                      <h3>{oneEvent.performance[0].displayName}</h3>\n                    </Link>\n                  </div>\n                  <div>\n                    <button\n                      className=\"btn-delete\"\n                      onClick={() => this.handleSubmit(oneEvent)}\n                    >\n                      x\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div>\n            <SpotiPlayer {...this.props} />\n          </div>\n          <div>\n            <PlayListPlayer />\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport \"./App.css\";\nimport HomePage from \"./components/HomePage.js\";\nimport NotFound from \"./components/NotFound.js\";\nimport Connected from \"./components/connected\";\nimport TopFrenchPage from \"./components/TopFrenchPage\";\nimport UserRelatedConcerts from \"./components/UserRelatedConcerts\";\nimport GenericInfosHome from \"./components/GenericHomepage\";\nimport ConcertInfo from \"./components/ConcertInfo.js\";\nimport TestPage from \"./components/Test\";\nimport Dashboard from \"./components/user-dashboard\";\nimport SpotiPlayer from \"./components/SpotiPlayer.js\";\nimport AttendingEvent from \"./components/AttendingEvent\";\nimport PlayListPlayer from \"./components/playListPlayer\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let userData = localStorage.getItem(\"currentUser\");\n    if (userData) {\n      userData = JSON.parse(userData);\n    }\n\n    this.state = {\n      currentUser: userData\n    };\n  }\n\n  updateUser(userInfo) {\n    if (userInfo) {\n      localStorage.setItem(\"currentUser\", JSON.stringify(userInfo));\n    } else {\n      localStorage.removeItem(\"currentUser\");\n    }\n    this.setState({ currentUser: userInfo });\n  }\n\n  render() {\n    const { currentUser } = this.state;\n    return (\n      <section className=\"App\">\n        <div className=\"body\">\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route\n              path=\"/connected/:loginToken?\"\n              render={props => {\n                return (\n                  <Connected\n                    currentUser={this.state.currentUser}\n                    loggedIn={user => this.updateUser(user)}\n                    match={props.match}\n                    history={props.history}\n                  />\n                );\n              }}\n            />\n            <Route path=\"/top-french\" component={TopFrenchPage} />\n            <Route path=\"/similar-artist\" component={UserRelatedConcerts} />\n            <Route\n              path=\"/concert-info/:concertId\"\n              render={props => (\n                <ConcertInfo\n                  match={props.match}\n                  currentUser={this.state.currentUser}\n                  addConcertToUser={user => this.updateUser(user)}\n                />\n              )}\n            />\n            <Route path=\"/spotiPlayer\" component={SpotiPlayer} />\n            <Route path=\"/playListPlayer\" component={PlayListPlayer} />\n            <Route path=\"/generic\" component={GenericInfosHome} />\n            <Route path=\"/test\" component={TestPage} />\n            <Route\n              path=\"/attending-event\"\n              render={() => (\n                <AttendingEvent currentUser={this.state.currentUser} />\n              )}\n            />\n            <Route\n              path=\"/user-dashboard\"\n              render={() => (\n                <Dashboard\n                  currentUser={this.state.currentUser}\n                  onConcertDelete={user => this.updateUser(user)}\n                />\n              )}\n            />\n\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n        <footer>\n          {/* <NavLink to=\"/connected\">Home Page</NavLink>\n          <NavLink to=\"/top-french\">\n            <button>Go to French Selection</button>\n          </NavLink>\n          <NavLink to=\"/similar-artist\">\n            <button>Our selection of similar concerts for you</button>\n          </NavLink>\n          <NavLink to=\"/user-dashboard\">Your Dashboard</NavLink> */}\n          <p>Made with 🎸 at Ironhack Paris</p>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}